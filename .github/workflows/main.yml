name: app

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      SHEME: Runner
      BUILD_CONFIGURATION: Release
      TEAM_ID: J48QZ82532
      PROVISIONING_PROFILE: aa779a39-546a-4ca6-91ed-cf509aa59b3e
      CODE_SIGN_IDENTITY: "iPhone Developer: 306852160@qq.com (A3GTW88226)"
    steps:
    - uses: actions/checkout@v3
    - name: Install the Apple certificate and provisioning profile
      env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - uses: subosito/flutter-action@v2
      with:
        channel: 'beta'
        architecture: x64
    - run: flutter pub get
    - run: flutter test
    #- run: flutter build ios --release
    - run: flutter build ios --release --no-codesign
    - name: Build xArchive
      run: |
        xcodebuild -workspace ios/Runner.xcworkspace -scheme ${{ env.SHEME }} -configuration ${{ env.BUILD_CONFIGURATION }} DEVELOPMENT_TEAM=${{ env.TEAM_ID }} -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE=${{ env.PROVISIONING_PROFILE }} clean archive CODE_SIGN_IDENTITY="${{ env.CODE_SIGN_IDENTITY }}"
    - name: Export ipa
      run: xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist
    - name: Publish iOS Artefacts
      uses: actions/upload-artifact@v1
      with:
        name: release-ios
        path: build-output/ios
